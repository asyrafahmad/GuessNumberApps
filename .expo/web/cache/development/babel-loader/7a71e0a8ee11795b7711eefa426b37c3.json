{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\DEVELOPMENT_LEARN\\\\reactNative(GuessNumberApp)\\\\GuessNumberApps\\\\screens\\\\GameScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NumberContainer from \"../components/NumberContainer.js\";\nimport Card from \"../components/Card.js\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclede) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nvar GameScreen = function GameScreen(props) {\n  var _useState = useState(generateRandomBetween(1, 100, props.userChoice)),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Oppenents Guess \"), React.createElement(NumberContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, currentGuess), React.createElement(Card, {\n    styles: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"LOWER\",\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"GREATER\",\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 20,\n    width: 300,\n    maxWidth: '80%'\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["D:/DEVELOPMENT_LEARN/reactNative(GuessNumberApp)/GuessNumberApps/screens/GameScreen.js"],"names":["React","useState","NumberContainer","Card","generateRandomBetween","min","max","exclude","Math","ceil","floor","rndNum","random","exclede","GameScreen","props","userChoice","currentGuess","setCurrentGuess","styles","screen","buttonContainer","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","width","maxWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAGA,OAAOC,eAAP;AACA,OAAOC,IAAP;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAuB;AAEjDF,EAAAA,GAAG,GAAGG,IAAI,CAACC,IAAL,CAAUJ,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGE,IAAI,CAACE,KAAL,CAAWJ,GAAX,CAAN;AAEA,MAAMK,MAAM,GAAGH,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACI,MAAL,MAAeN,GAAG,GAAGD,GAArB,CAAX,IAAwCA,GAAvD;;AAEA,MAAGM,MAAM,KAAKE,OAAd,EAAsB;AAClB,WAAOT,qBAAqB,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,CAA5B;AACH,GAFD,MAGI;AACA,WAAOI,MAAP;AACH;AACJ,CAbD;;AAgBA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,kBACgBd,QAAQ,CAC5CG,qBAAqB,CAAC,CAAD,EAAI,GAAJ,EAASW,KAAK,CAACC,UAAf,CADuB,CADxB;AAAA;AAAA,MACjBC,YADiB;AAAA,MACHC,eADG;;AAKxB,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBH,YAAlB,CAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEE,MAAM,CAACE,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,mBAAM,CAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,mBAAM,CAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAHJ,CADJ;AAUH,CAfD;;AAiBA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,MAAM,EAAE;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,UAAU,EAAE;AAHR,GADqB;AAM7BL,EAAAA,eAAe,EAAE;AACbM,IAAAA,aAAa,EAAE,KADF;AAEbC,IAAAA,cAAc,EAAE,cAFH;AAGbC,IAAAA,SAAS,EAAE,EAHE;AAIbC,IAAAA,KAAK,EAAE,GAJM;AAKbC,IAAAA,QAAQ,EAAE;AALG;AANY,CAAlB,CAAf;AAeA,eAAejB,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {View,Text, StyleSheet} from 'react-native';\r\n\r\nimport NumberContainer from '../components/NumberContainer.js';\r\nimport Card from '../components/Card.js';\r\n\r\nconst generateRandomBetween = (min, max, exclude) => {\r\n\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n\r\n    const rndNum = Math.floor(Math.random()*(max - min)) + min;\r\n\r\n    if(rndNum === exclede){\r\n        return generateRandomBetween(min, max, exclude);\r\n    }\r\n    else{\r\n        return rndNum;\r\n    }\r\n};\r\n\r\n\r\nconst GameScreen = props => {\r\n    const [currentGuess, setCurrentGuess] = useState(\r\n        generateRandomBetween(1, 100, props.userChoice)\r\n    );\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            <Text>Oppenents Guess </Text>\r\n            <NumberContainer>{currentGuess}</NumberContainer>\r\n            <Card styles={styles.buttonContainer}>\r\n                <Button title=\"LOWER\" onPress={() => {}} />\r\n                <Button title=\"GREATER\" onPress={() => {}} />\r\n            </Card>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        padding: 10,\r\n        alignItems: 'center'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        marginTop: 20,\r\n        width: 300,\r\n        maxWidth: '80%'\r\n    }\r\n});\r\n\r\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}