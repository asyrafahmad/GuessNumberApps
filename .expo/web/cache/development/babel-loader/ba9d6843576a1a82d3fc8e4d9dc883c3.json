{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\DEVELOPMENT_LEARN\\\\reactNative(GuessNumberApp)\\\\GuessNumberApps\\\\screens\\\\StartGameScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Colors from \"../constants/colors\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue('');\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (chosenNumber === NaN || chosenNumber <= 0 || chosenNumber > 99) {\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue('');\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }\n    }, \"Chosen Number: \", selectedNumber);\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Start a New Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangetext: numberInputHandler,\n    Value: enteredValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })))), confirmInputHandler));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  },\n  button: {\n    width: 100\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["D:/DEVELOPMENT_LEARN/reactNative(GuessNumberApp)/GuessNumberApps/screens/StartGameScreen.js"],"names":["React","useState","Card","Input","Colors","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","NaN","confirmedOutput","Keyboard","dismiss","styles","screen","title","inputContainer","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Button,\r\n    TouchableWithoutFeedback,\r\n    Keyboard                //not a component but API\r\n} from 'react-native';\r\n\r\n\r\nimport Card from '../components/Card';\r\nimport Input from '../components/Input';\r\nimport Colors from '../constants/colors';\r\n\r\n\r\nconst StartGameScreen = props => {\r\n\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [confirmed, setConfirmed] = useState(false);\r\n    const [selectedNumber, setSelectedNumber] = useState();\r\n\r\n    const numberInputHandler = inputText => {\r\n        // replace =  to replace js string inputText into number (while /[^0-9] = cannot put anything else like comma, just number )\r\n        setEnteredValue(inputText.replace(/[^0-9]/g, '')); \r\n    };\r\n\r\n    const resetInputHandler = () => {\r\n        setEnteredValue('');\r\n        setConfirmed(false)\r\n    };\r\n\r\n    const confirmInputHandler = () => {\r\n        const chosenNumber = parseInt(enteredValue);\r\n\r\n        if(chosenNumber === NaN || chosenNumber <= 0 || chosenNumber > 99){\r\n            return;\r\n        }\r\n\r\n        setConfirmed(true);\r\n        setSelectedNumber(chosenNumber);\r\n        setEnteredValue('');\r\n    }; \r\n\r\n    let confirmedOutput;\r\n\r\n    //looks like validation\r\n    if (confirmed){\r\n        confirmedOutput = <Text>Chosen Number: {selectedNumber}</Text>\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={() => {\r\n            Keyboard.dismiss();\r\n        }}>\r\n        <View style={styles.screen}>\r\n            <Text style={styles.title}>Start a New Game!</Text>\r\n            <Card style={styles.inputContainer}>\r\n                <Text>Select a Number</Text>\r\n                <Input \r\n                    style={styles.input}\r\n                    blurOnSubmit\r\n                    autoCapitalize = \"none\"\r\n                    autoCorrect = {false} \r\n                    keyboardType = \"number-pad\"\r\n                    maxLength= {2} \r\n                    onChangetext={numberInputHandler}\r\n                    Value={enteredValue}\r\n                />\r\n                <View style={styles.buttonContainer}>\r\n                    <View style={styles.button}>\r\n                        <Button\r\n                            title=\"Reset\"\r\n                            onPress={resetInputHandler}\r\n                            color={Colors.accent}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.button}>\r\n                        <Button \r\n                            title=\"Confirm\" \r\n                            onPress={confirmInputHandler} \r\n                            color={Colors.primary}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </Card>\r\n            {confirmInputHandler}\r\n        </View>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n};\r\n\r\n const styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        padding: 10,  \r\n        alignItems: 'center' \r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginVertical: 10\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n        maxWidth: '80%',\r\n        alignItems: 'center'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 15\r\n    },\r\n    button: {\r\n        width: 100\r\n    },\r\n    input: {\r\n        width: 50,\r\n        textAlign: 'center',\r\n    }\r\n});\r\n\r\nexport default StartGameScreen;"]},"metadata":{},"sourceType":"module"}